apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: colossus-kafka
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: colossus-kafka
spec:
  serviceName: colossus-kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: colossus-kafka
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: colossus-kafka
    spec:
      enableServiceLinks: false
      containers:
        - name: kafka
          image: "confluentinc/cp-kafka:7.5.9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka
              containerPort: 29092
              protocol: TCP
            - name: controller
              containerPort: 9093
              protocol: TCP
          env:
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_NODE_ID
              value: "1"
            - name: CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@colossus-kafka-0.colossus-kafka-headless.default.svc.cluster.local:9093"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://colossus-kafka-0.colossus-kafka-headless.default.svc.cluster.local:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          readinessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 60
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: kafka-storage
        resources:
          requests:
            storage: 8Gi
