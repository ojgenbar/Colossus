apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: colossus-s3
  labels:
    app.kubernetes.io/name: s3
    app.kubernetes.io/instance: colossus-s3
spec:
  serviceName: colossus-s3-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: s3
      app.kubernetes.io/instance: colossus-s3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: s3
        app.kubernetes.io/instance: colossus-s3
    spec:
      enableServiceLinks: false
      containers:
        - name: s3
          image: "minio/minio:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9090
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_access_key
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_secret_key
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          command:
            - minio
            - server
            - /data
            - --console-address
            - ":9090"
          volumeMounts:
            - name: s3-data
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: s3-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: s3-storage
        resources:
          requests:
            storage: 1Gi
